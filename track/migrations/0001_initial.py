# Generated by Django 3.2.8 on 2021-11-03 11:45

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Aspnetroles',
            fields=[
                ('id', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Id', max_length=128, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Name', max_length=256, null=True)),
            ],
            options={
                'db_table': 'aspnetroles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Aspnetuserclaims',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('userid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='UserId', max_length=128, null=True)),
                ('claimtype', models.TextField(blank=True, db_column='ClaimType', null=True)),
                ('claimvalue', models.TextField(blank=True, db_column='ClaimValue', null=True)),
            ],
            options={
                'db_table': 'aspnetuserclaims',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Aspnetuserlogins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loginprovider', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='LoginProvider', max_length=128, null=True)),
                ('providerkey', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='ProviderKey', max_length=128, null=True)),
                ('userid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='UserId', max_length=128, null=True)),
            ],
            options={
                'db_table': 'aspnetuserlogins',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Aspnetuserroles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='UserId', max_length=128, null=True)),
                ('roleid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='RoleId', max_length=128, null=True)),
            ],
            options={
                'db_table': 'aspnetuserroles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Aspnetusers',
            fields=[
                ('id', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Id', max_length=128, primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Email', max_length=256, null=True)),
                ('emailconfirmed', models.IntegerField(blank=True, db_column='EmailConfirmed', null=True)),
                ('passwordhash', models.TextField(blank=True, db_column='PasswordHash', null=True)),
                ('securitystamp', models.TextField(blank=True, db_column='SecurityStamp', null=True)),
                ('phonenumber', models.TextField(blank=True, db_column='PhoneNumber', null=True)),
                ('phonenumberconfirmed', models.IntegerField(blank=True, db_column='PhoneNumberConfirmed', null=True)),
                ('twofactorenabled', models.IntegerField(blank=True, db_column='TwoFactorEnabled', null=True)),
                ('lockoutenddateutc', models.DateTimeField(blank=True, db_column='LockoutEndDateUtc', null=True)),
                ('lockoutenabled', models.IntegerField(blank=True, db_column='LockoutEnabled', null=True)),
                ('accessfailedcount', models.IntegerField(blank=True, db_column='AccessFailedCount', null=True)),
                ('username', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='UserName', max_length=256, null=True)),
            ],
            options={
                'db_table': 'aspnetusers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Billingaddressmaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sid', models.IntegerField(blank=True, null=True)),
                ('userid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='UserID', max_length=128, null=True)),
                ('salutation', models.IntegerField(blank=True, null=True)),
                ('firstname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Firstname', max_length=150, null=True)),
                ('lastname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Lastname', max_length=150, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=256, null=True)),
                ('phoneno', models.CharField(blank=True, db_column='Phoneno', max_length=20, null=True)),
                ('company', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Company', max_length=250, null=True)),
                ('company_addition', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Company_addition', max_length=250, null=True)),
                ('road', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Road', max_length=100, null=True)),
                ('housenumber', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Housenumber', max_length=50, null=True)),
                ('additionaladdress', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Additionaladdress', max_length=500, null=True)),
                ('country', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=200, null=True)),
                ('state', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=100, null=True)),
                ('postcode', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Postcode', max_length=50, null=True)),
                ('place', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=50, null=True)),
                ('vatnumber', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='VATnumber', max_length=50, null=True)),
            ],
            options={
                'db_table': 'billingaddressmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Brandmodeltypeset',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('brandid', models.IntegerField(blank=True, db_column='BrandId', null=True)),
                ('iscustom', models.IntegerField(blank=True, db_column='IsCustom', null=True)),
            ],
            options={
                'db_table': 'brandmodeltypeset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Brandset',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('createdby', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='CreatedBy', max_length=128, null=True)),
            ],
            options={
                'db_table': 'brandset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CamperRegulationansmaster',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('anstype', models.CharField(blank=True, db_column='Anstype', max_length=50, null=True)),
            ],
            options={
                'db_table': 'camper_regulationansmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CMigrationhistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('migrationid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='MigrationId', max_length=150, null=True)),
                ('contextkey', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='ContextKey', max_length=300, null=True)),
                ('model', models.TextField(blank=True, db_column='Model', null=True)),
                ('productversion', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='ProductVersion', max_length=32, null=True)),
            ],
            options={
                'db_table': 'c__migrationhistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Merchantbrands',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('merchantid', models.IntegerField(blank=True, db_column='MerchantId', null=True)),
                ('brandid', models.IntegerField(blank=True, db_column='BrandId', null=True)),
            ],
            options={
                'db_table': 'merchantbrands',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Merchants',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Name', max_length=150, null=True)),
                ('address_city', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Address_City', max_length=100, null=True)),
                ('address_country', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Address_Country', max_length=200, null=True)),
                ('address_street', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Address_Street', max_length=150, null=True)),
                ('address_postal', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Address_Postal', max_length=20, null=True)),
                ('address_state', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Address_State', max_length=150, null=True)),
                ('address_latitude', models.FloatField(blank=True, db_column='Address_Latitude', null=True)),
                ('address_longitude', models.FloatField(blank=True, db_column='Address_Longitude', null=True)),
                ('isactive', models.IntegerField(blank=True, db_column='IsActive', null=True)),
                ('website', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Website', max_length=200, null=True)),
                ('phone', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Phone', max_length=20, null=True)),
                ('fax', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Fax', max_length=100, null=True)),
                ('userid', models.IntegerField(blank=True, db_column='UserId', null=True)),
                ('installationflatrate', models.DecimalField(blank=True, db_column='Installationflatrate', decimal_places=2, max_digits=10, null=True)),
                ('supportedbrand', models.IntegerField(blank=True, db_column='Supportedbrand', null=True)),
                ('opentimes_opentimes_mondaystart', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='OpenTimes_OpenTimes_MondayStart', max_length=16, null=True)),
                ('opentimes_opentimes_mondayend', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='OpenTimes_OpenTimes_MondayEnd', max_length=16, null=True)),
                ('opentimes_opentimes_tuesdaystart', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='OpenTimes_OpenTimes_TuesdayStart', max_length=16, null=True)),
                ('opentimes_opentimes_tuesdayend', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='OpenTimes_OpenTimes_TuesdayEnd', max_length=16, null=True)),
                ('opentimes_opentimes_wednesdaystart', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='OpenTimes_OpenTimes_WednesdayStart', max_length=16, null=True)),
                ('opentimes_opentimes_wednesdayend', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='OpenTimes_OpenTimes_WednesdayEnd', max_length=16, null=True)),
                ('opentimes_opentimes_thursdaystart', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='OpenTimes_OpenTimes_ThursdayStart', max_length=16, null=True)),
                ('opentimes_opentimes_thursdayend', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='OpenTimes_OpenTimes_ThursdayEnd', max_length=16, null=True)),
                ('opentimes_opentimes_fridaystart', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='OpenTimes_OpenTimes_FridayStart', max_length=16, null=True)),
                ('opentimes_opentimes_fridayend', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='OpenTimes_OpenTimes_FridayEnd', max_length=16, null=True)),
                ('opentimes_opentimes_saturdaystart', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='OpenTimes_OpenTimes_SaturdayStart', max_length=16, null=True)),
                ('opentimes_opentimes_saturdayend', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='OpenTimes_OpenTimes_SaturdayEnd', max_length=16, null=True)),
                ('opentimes_opentimes_sundaystart', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='OpenTimes_OpenTimes_SundayStart', max_length=16, null=True)),
                ('opentimes_opentimes_sundayend', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='OpenTimes_OpenTimes_SundayEnd', max_length=16, null=True)),
                ('summer_opentimes_opentimes_mondaystart', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Summer_OpenTimes_OpenTimes_MondayStart', max_length=16, null=True)),
                ('summer_opentimes_opentimes_mondayend', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Summer_OpenTimes_OpenTimes_MondayEnd', max_length=16, null=True)),
                ('summer_opentimes_opentimes_tuesdaystart', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Summer_OpenTimes_OpenTimes_TuesdayStart', max_length=16, null=True)),
                ('summer_opentimes_opentimes_tuesdayend', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Summer_OpenTimes_OpenTimes_TuesdayEnd', max_length=16, null=True)),
                ('summer_opentimes_opentimes_wednesdaystart', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Summer_OpenTimes_OpenTimes_WednesdayStart', max_length=16, null=True)),
                ('summer_opentimes_opentimes_wednesdayend', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Summer_OpenTimes_OpenTimes_WednesdayEnd', max_length=16, null=True)),
                ('summer_opentimes_opentimes_thursdaystart', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Summer_OpenTimes_OpenTimes_ThursdayStart', max_length=16, null=True)),
                ('summer_opentimes_opentimes_thursdayend', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Summer_OpenTimes_OpenTimes_ThursdayEnd', max_length=16, null=True)),
                ('summer_opentimes_opentimes_fridaystart', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Summer_OpenTimes_OpenTimes_FridayStart', max_length=16, null=True)),
                ('summer_opentimes_opentimes_fridayend', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Summer_OpenTimes_OpenTimes_FridayEnd', max_length=16, null=True)),
                ('summer_opentimes_opentimes_saturdaystart', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Summer_OpenTimes_OpenTimes_SaturdayStart', max_length=16, null=True)),
                ('summer_opentimes_opentimes_saturdayend', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Summer_OpenTimes_OpenTimes_SaturdayEnd', max_length=16, null=True)),
                ('summer_opentimes_opentimes_sundaystart', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Summer_OpenTimes_OpenTimes_SundayStart', max_length=16, null=True)),
                ('summer_opentimes_opentimes_sundayend', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Summer_OpenTimes_OpenTimes_SundayEnd', max_length=16, null=True)),
                ('winter_monday_close', models.IntegerField(blank=True, db_column='Winter_Monday_close', null=True)),
                ('winter_tuseday_close', models.IntegerField(blank=True, db_column='Winter_tuseday_close', null=True)),
                ('winter_wednessday_close', models.IntegerField(blank=True, db_column='Winter_wednessday_close', null=True)),
                ('winter_thursday_close', models.IntegerField(blank=True, db_column='Winter_thursday_close', null=True)),
                ('winter_friday_cloas', models.IntegerField(blank=True, db_column='Winter_friday_cloas', null=True)),
                ('winter_saturday_close', models.IntegerField(blank=True, db_column='Winter_saturday_close', null=True)),
                ('winter_sunday_close', models.IntegerField(blank=True, db_column='Winter_sunday_close', null=True)),
                ('summer_monday_close', models.IntegerField(blank=True, db_column='Summer_Monday_close', null=True)),
                ('summer_tuseday_close', models.IntegerField(blank=True, db_column='Summer_tuseday_close', null=True)),
                ('summer_wednessday_close', models.IntegerField(blank=True, db_column='Summer_wednessday_close', null=True)),
                ('summer_thursday_close', models.IntegerField(blank=True, db_column='Summer_thursday_close', null=True)),
                ('summer_friday_close', models.IntegerField(blank=True, db_column='Summer_friday_close', null=True)),
                ('summer_saturday_close', models.IntegerField(blank=True, db_column='Summer_saturday_close', null=True)),
                ('summer_sunday_close', models.IntegerField(blank=True, db_column='Summer_sunday_close', null=True)),
                ('dealeremail', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Dealeremail', max_length=128, null=True)),
            ],
            options={
                'db_table': 'merchants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Migrationhistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('migrationid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='MigrationId', max_length=150, null=True)),
                ('contextkey', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='ContextKey', max_length=300, null=True)),
                ('model', models.TextField(blank=True, db_column='Model', null=True)),
                ('productversion', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='ProductVersion', max_length=32, null=True)),
            ],
            options={
                'db_table': '__migrationhistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PackagewisePaymenttype',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('packageid', models.IntegerField(blank=True, db_column='PackageID', null=True)),
                ('paytypename', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='PaytypeName', max_length=100, null=True)),
                ('paytypename_german', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='PaytypeName_german', max_length=100, null=True)),
                ('price', models.DecimalField(blank=True, db_column='Price', decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'packagewise_paymenttype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Paymenttype',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('paymenttype', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Paymenttype', max_length=100, null=True)),
                ('sandbox_braintree_planid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Sandbox_Braintree_PlanID', max_length=20, null=True)),
                ('production_braintree_planid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Production_Braintree_PlanID', max_length=20, null=True)),
            ],
            options={
                'db_table': 'paymenttype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Postalcodemaster',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('osm_id', models.FloatField(blank=True, null=True)),
                ('ort', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=255, null=True)),
                ('plz', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=255, null=True)),
                ('bundesland', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=255, null=True)),
                ('land', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=255, null=True)),
            ],
            options={
                'db_table': 'postalcodemaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Promotioncredit',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(blank=True, db_column='UserId', null=True)),
                ('subscriptionid', models.IntegerField(blank=True, db_column='SubscriptionId', null=True)),
                ('creditamt', models.DecimalField(blank=True, db_column='CreditAmt', decimal_places=2, max_digits=10, null=True)),
                ('debitamt', models.DecimalField(blank=True, db_column='DebitAmt', decimal_places=2, max_digits=10, null=True)),
                ('createdby', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='CreatedBy', max_length=128, null=True)),
                ('createddate', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
            ],
            options={
                'db_table': 'promotioncredit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Registractiondetails',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, db_column='Firstname', max_length=100, null=True)),
                ('lastname', models.CharField(blank=True, db_column='Lastname', max_length=100, null=True)),
                ('dob', models.DateTimeField(blank=True, db_column='DOB', null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=256, null=True)),
                ('password', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Password', max_length=50, null=True)),
                ('contactphone', models.CharField(blank=True, db_column='ContactPhone', max_length=20, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=100, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=100, null=True)),
                ('postcode', models.CharField(blank=True, db_column='PostCode', max_length=20, null=True)),
                ('road', models.CharField(blank=True, db_column='Road', max_length=100, null=True)),
                ('accquiredby', models.CharField(blank=True, db_column='Accquiredby', max_length=100, null=True)),
                ('subscription_package', models.IntegerField(blank=True, db_column='Subscription_Package', null=True)),
                ('subscriptionpackage_price', models.DecimalField(blank=True, db_column='Subscriptionpackage_Price', decimal_places=2, max_digits=10, null=True)),
                ('subscriptionprice_cuurency', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Subscriptionprice_cuurency', max_length=10, null=True)),
                ('trackerpackage', models.IntegerField(blank=True, db_column='TrackerPackage', null=True)),
                ('trackerpackage_price', models.DecimalField(blank=True, db_column='Trackerpackage_Price', decimal_places=2, max_digits=10, null=True)),
                ('tracker_currency', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Tracker_currency', max_length=10, null=True)),
                ('paymentinterval', models.IntegerField(blank=True, db_column='PaymentInterval', null=True)),
                ('userid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='UserId', max_length=128, null=True)),
            ],
            options={
                'db_table': 'registractiondetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Salutationmaster',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('salutation', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'salutationmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Securitycompanies',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Name', max_length=150, null=True)),
                ('address_city', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Address_City', max_length=100, null=True)),
                ('address_country', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Address_Country', max_length=200, null=True)),
                ('address_street', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Address_Street', max_length=100, null=True)),
                ('address_postal', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Address_Postal', max_length=50, null=True)),
                ('address_state', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Address_State', max_length=100, null=True)),
                ('address_latitude', models.FloatField(blank=True, db_column='Address_Latitude', null=True)),
                ('address_longitude', models.FloatField(blank=True, db_column='Address_Longitude', null=True)),
                ('ownerid', models.IntegerField(blank=True, db_column='OwnerId', null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=256, null=True)),
                ('contactphone', models.CharField(blank=True, db_column='ContactPhone', max_length=20, null=True)),
                ('emergency', models.CharField(blank=True, db_column='Emergency', max_length=20, null=True)),
            ],
            options={
                'db_table': 'securitycompanies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shippingaddressmaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sid', models.IntegerField(blank=True, null=True)),
                ('userid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='UserID', max_length=128, null=True)),
                ('salutation', models.IntegerField(blank=True, null=True)),
                ('firstname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Firstname', max_length=150, null=True)),
                ('lastname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Lastname', max_length=150, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=256, null=True)),
                ('phoneno', models.CharField(blank=True, db_column='Phoneno', max_length=20, null=True)),
                ('company', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Company', max_length=250, null=True)),
                ('company_addition', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Company_addition', max_length=250, null=True)),
                ('road', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Road', max_length=100, null=True)),
                ('housenumber', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Housenumber', max_length=50, null=True)),
                ('additionaladdress', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Additionaladdress', max_length=500, null=True)),
                ('country', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=200, null=True)),
                ('state', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=100, null=True)),
                ('postcode', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Postcode', max_length=50, null=True)),
                ('place', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=50, null=True)),
                ('vatnumber', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='VATnumber', max_length=50, null=True)),
            ],
            options={
                'db_table': 'shippingaddressmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shippingcharges',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('shippingcharges', models.DecimalField(blank=True, db_column='Shippingcharges', decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'shippingcharges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shoppingcartitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cartitemid', models.IntegerField(blank=True, db_column='CartItemID', null=True)),
                ('cartid', models.CharField(blank=True, db_column='CartID', max_length=50, null=True)),
                ('trackercategoryid', models.IntegerField(blank=True, db_column='TrackerCategoryId', null=True)),
                ('trackercategory', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='TrackerCategory', max_length=200, null=True)),
                ('trackerid', models.IntegerField(blank=True, db_column='TrackerId', null=True)),
                ('trackername', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='TrackerName', max_length=200, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='Unitprice', decimal_places=2, max_digits=10, null=True)),
                ('quentity', models.IntegerField(blank=True, db_column='Quentity', null=True)),
                ('totalprice', models.DecimalField(blank=True, db_column='Totalprice', decimal_places=2, max_digits=18, null=True)),
                ('dateadded', models.DateTimeField(blank=True, db_column='DateAdded', null=True)),
                ('articleno', models.IntegerField(blank=True, db_column='Articleno', null=True)),
                ('trackerimage', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='TrackerImage', max_length=200, null=True)),
            ],
            options={
                'db_table': 'shoppingcartitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shopusers',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('userid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='UserID', max_length=128, null=True)),
                ('salutation', models.IntegerField(blank=True, null=True)),
                ('firstname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Firstname', max_length=150, null=True)),
                ('lastname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Lastname', max_length=150, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=256, null=True)),
                ('phoneno', models.CharField(blank=True, db_column='Phoneno', max_length=20, null=True)),
                ('company', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Company', max_length=250, null=True)),
                ('company_addition', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Company_Addition', max_length=250, null=True)),
                ('road', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Road', max_length=100, null=True)),
                ('housenumber', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='HouseNumber', max_length=50, null=True)),
                ('additionaladdress', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Additionaladdress', max_length=500, null=True)),
                ('country', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Country', max_length=200, null=True)),
                ('state', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='State', max_length=100, null=True)),
                ('postcode', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Postcode', max_length=50, null=True)),
                ('place', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=50, null=True)),
                ('vatnumber', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='VATnumber', max_length=50, null=True)),
            ],
            options={
                'db_table': 'shopusers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubscriptionOffers',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('activefrom', models.DateTimeField(blank=True, db_column='ActiveFrom', null=True)),
                ('activeuntil', models.DateTimeField(blank=True, db_column='ActiveUntil', null=True)),
                ('offername', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='OfferName', max_length=150, null=True)),
                ('offerdescription', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='OfferDescription', max_length=1000, null=True)),
                ('subscriptionid', models.IntegerField(blank=True, db_column='SubscriptionId', null=True)),
                ('duration', models.IntegerField(blank=True, db_column='Duration', null=True)),
            ],
            options={
                'db_table': 'subscription_offers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subscriptionuserdetails',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('salutation', models.IntegerField(blank=True, db_column='Salutation', null=True)),
                ('firstname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Firstname', max_length=100, null=True)),
                ('lastname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Lastname', max_length=100, null=True)),
                ('dob', models.DateTimeField(blank=True, db_column='DOB', null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=256, null=True)),
                ('contactphone', models.CharField(blank=True, db_column='ContactPhone', max_length=20, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=100, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=100, null=True)),
                ('postcode', models.CharField(blank=True, db_column='PostCode', max_length=20, null=True)),
                ('road', models.CharField(blank=True, db_column='Road', max_length=100, null=True)),
                ('accquiredby', models.CharField(blank=True, db_column='Accquiredby', max_length=100, null=True)),
                ('subscription_packageid', models.IntegerField(blank=True, db_column='Subscription_PackageId', null=True)),
                ('subscription_packagename', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Subscription_PackageName', max_length=200, null=True)),
                ('subscriptionpackage_price', models.DecimalField(blank=True, db_column='Subscriptionpackage_Price', decimal_places=2, max_digits=10, null=True)),
                ('subscriptionprice_cuurency', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Subscriptionprice_cuurency', max_length=10, null=True)),
                ('paymentinterval', models.IntegerField(blank=True, db_column='PaymentInterval', null=True)),
                ('paymrntinterval_method', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Paymrntinterval_method', max_length=150, null=True)),
                ('paymentinterval_price', models.DecimalField(blank=True, db_column='Paymentinterval_price', decimal_places=2, max_digits=18, null=True)),
                ('userid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='UserId', max_length=128, null=True)),
                ('trackerid', models.IntegerField(blank=True, db_column='TrackerId', null=True)),
                ('trackername', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Trackername', max_length=150, null=True)),
                ('trackerprice', models.DecimalField(blank=True, db_column='TrackerPrice', decimal_places=2, max_digits=10, null=True)),
                ('mobilecardcharges', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('createddate', models.DateTimeField(blank=True, db_column='Createddate', null=True)),
                ('ispendingtraker_payment', models.IntegerField(blank=True, db_column='Ispendingtraker_Payment', null=True)),
                ('isactivesubscription', models.IntegerField(blank=True, db_column='Isactivesubscription', null=True)),
                ('subscription_transactionid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Subscription_transactionID', max_length=100, null=True)),
                ('tracker_tracnsactionid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Tracker_tracnsactionID', max_length=100, null=True)),
                ('subscription_mandate', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Subscription_mandate', max_length=100, null=True)),
                ('subscription_paytype', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Subscription_Paytype', max_length=100, null=True)),
                ('subscription_guid', models.CharField(blank=True, db_column='Subscription_guid', max_length=36, null=True)),
                ('promotioncreditid', models.IntegerField(blank=True, db_column='PromotionCreditID', null=True)),
            ],
            options={
                'db_table': 'subscriptionuserdetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subscriptionuserwisepayment',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('usersubscriptionid', models.IntegerField(blank=True, db_column='UsersubscriptionId', null=True)),
                ('paymentdate', models.DateTimeField(blank=True, db_column='Paymentdate', null=True)),
                ('mobilecharges', models.DecimalField(blank=True, db_column='Mobilecharges', decimal_places=2, max_digits=18, null=True)),
                ('paymentammount', models.DecimalField(blank=True, db_column='Paymentammount', decimal_places=2, max_digits=18, null=True)),
                ('subscriptionpcakage', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Subscriptionpcakage', max_length=150, null=True)),
                ('paymentinterval', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='PaymentInterval', max_length=150, null=True)),
                ('note', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Note', max_length=500, null=True)),
                ('addeddate', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'subscriptionuserwisepayment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblAdminformssection',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Title', max_length=100, null=True)),
                ('description', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Description', max_length=250, null=True)),
                ('filename', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=100, null=True)),
                ('filepath', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Filepath', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'tbl_adminformssection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblCustomerreviewratting',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Firstname', max_length=100, null=True)),
                ('lastname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Lastname', max_length=100, null=True)),
                ('email', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Email', max_length=256, null=True)),
                ('phonenumber', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Phonenumber', max_length=20, null=True)),
                ('rate_star', models.IntegerField(blank=True, db_column='Rate_star', null=True)),
                ('shortdescription', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Shortdescription', max_length=1000, null=True)),
                ('isdisplay', models.IntegerField(blank=True, db_column='Isdisplay', null=True)),
            ],
            options={
                'db_table': 'tbl_customerreviewratting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblDistanceradiousmaster',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('postalcode', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Postalcode', max_length=20, null=True)),
                ('postalcode_latitude', models.FloatField(blank=True, db_column='Postalcode_latitude', null=True)),
                ('postalcode_longitide', models.FloatField(blank=True, db_column='Postalcode_longitide', null=True)),
            ],
            options={
                'db_table': 'tbl_distanceradiousmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblGeozonesettings',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('trackerid', models.FloatField(blank=True, db_column='TrackerID', null=True)),
                ('latitude', models.FloatField(blank=True, db_column='Latitude', null=True)),
                ('lonitude', models.FloatField(blank=True, db_column='Lonitude', null=True)),
                ('geozoneactivated', models.IntegerField(blank=True, db_column='GeoZoneActivated', null=True)),
                ('locationdatetime', models.DateTimeField(blank=True, db_column='Locationdatetime', null=True)),
            ],
            options={
                'db_table': 'tbl_geozonesettings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblHeadercontent',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('content_1', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=50, null=True)),
                ('content_2', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=50, null=True)),
                ('registrationline1', models.TextField(blank=True, db_column='RegistrationLine1', null=True)),
                ('registrationline2', models.TextField(blank=True, db_column='RegistrationLine2', null=True)),
                ('headercontent1', models.TextField(blank=True, db_column='HeaderContent1', null=True)),
                ('headercontent2', models.TextField(blank=True, db_column='HeaderContent2', null=True)),
                ('headercontent3', models.TextField(blank=True, db_column='HeaderContent3', null=True)),
                ('dealercontent', models.TextField(blank=True, db_column='DealerContent', null=True)),
                ('headerregisterpart1', models.TextField(blank=True, db_column='HeaderRegisterPart1', null=True)),
                ('headerregisterpart2', models.TextField(blank=True, db_column='HeaderRegisterPart2', null=True)),
                ('headerregisterpart3', models.TextField(blank=True, db_column='HeaderRegisterPart3', null=True)),
                ('purchasepackagedetails', models.TextField(blank=True, db_column='PurchasePackageDetails', null=True)),
                ('jobcontentdetails', models.TextField(blank=True, db_column='JobContentDetails', null=True)),
                ('footertrackcontent', models.TextField(blank=True, db_column='FooterTrackContent', null=True)),
                ('footertrackaddress', models.TextField(blank=True, db_column='FooterTrackAddress', null=True)),
                ('footertrackcontent2', models.TextField(blank=True, db_column='FooterTrackContent2', null=True)),
                ('termsofservice', models.TextField(blank=True, db_column='TermsOfService', null=True)),
                ('privacypolicy', models.TextField(blank=True, db_column='PrivacyPolicy', null=True)),
                ('imprint', models.TextField(blank=True, db_column='Imprint', null=True)),
                ('shopcontentproduct1', models.TextField(blank=True, db_column='ShopContentProduct1', null=True)),
                ('shopcontentproduct2', models.TextField(blank=True, db_column='ShopContentProduct2', null=True)),
                ('shopcontentproduct3', models.TextField(blank=True, db_column='ShopContentProduct3', null=True)),
            ],
            options={
                'db_table': 'tbl_headercontent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblInvoicetypemaster',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('invocietype', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Invocietype', max_length=100, null=True)),
            ],
            options={
                'db_table': 'tbl_invoicetypemaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblIpnresponse',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('strrequest', models.TextField(blank=True, db_column='strRequest', null=True)),
                ('verificationresponse', models.TextField(blank=True, db_column='verificationResponse', null=True)),
            ],
            options={
                'db_table': 'tbl_ipnresponse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblLat',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('lat', models.TextField(blank=True, null=True)),
                ('long', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_lat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblLocationstorage',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('trackerid', models.FloatField(blank=True, db_column='TrackerID', null=True)),
                ('location_date', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Location_Date', max_length=10, null=True)),
                ('location_time', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Location_time', max_length=16, null=True)),
                ('latitude', models.FloatField(blank=True, db_column='Latitude', null=True)),
                ('lonitude', models.FloatField(blank=True, db_column='Lonitude', null=True)),
                ('speed', models.FloatField(blank=True, db_column='Speed', null=True)),
                ('locationdatetime', models.DateTimeField(blank=True, db_column='Locationdatetime', null=True)),
                ('locationstring', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_locationstorage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblMobilecardcharges',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('mobilecardcharges', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'tbl_mobilecardcharges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblRadiousmaster',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('radious', models.IntegerField(blank=True, null=True)),
                ('parameter', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=10, null=True)),
            ],
            options={
                'db_table': 'tbl_radiousmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblTempsubscriptiongocardlessdata',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('salutation', models.IntegerField(blank=True, null=True)),
                ('firstname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Firstname', max_length=150, null=True)),
                ('surname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Surname', max_length=150, null=True)),
                ('datebirth', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Datebirth', max_length=150, null=True)),
                ('regemail', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='RegEmail', max_length=256, null=True)),
                ('password', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Password', max_length=150, null=True)),
                ('regphoneno', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='RegPhoneno', max_length=100, null=True)),
                ('country', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Country', max_length=100, null=True)),
                ('city', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='City', max_length=100, null=True)),
                ('postalcode', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Postalcode', max_length=100, null=True)),
                ('road', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Road', max_length=100, null=True)),
                ('acquiredby', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Acquiredby', max_length=100, null=True)),
                ('subscriptiontype', models.IntegerField(blank=True, db_column='Subscriptiontype', null=True)),
                ('payment_interval', models.IntegerField(blank=True, db_column='Payment_Interval', null=True)),
                ('tracker_type', models.IntegerField(blank=True, db_column='Tracker_Type', null=True)),
                ('redirectflow_id', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='redirectFlow_ID', max_length=200, null=True)),
                ('redirecturl', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='RedirectUrl', max_length=500, null=True)),
                ('sessionid', models.CharField(blank=True, db_column='SessionID', max_length=36, null=True)),
                ('subscriptionguid', models.CharField(blank=True, db_column='Subscriptionguid', max_length=36, null=True)),
                ('subscription_userdetailsid', models.IntegerField(blank=True, db_column='subscription_userdetailsID', null=True)),
            ],
            options={
                'db_table': 'tbl_tempsubscriptiongocardlessdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblTestlocationdata',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('locationdetails', models.TextField(blank=True, db_column='Locationdetails', null=True)),
            ],
            options={
                'db_table': 'tbl_testlocationdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblTrackeralarmresponse',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('trackeralarmresponse', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Trackeralarmresponse', max_length=1000, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_trackeralarmresponse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblTrackerresponse',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('response', models.TextField(blank=True, db_column='Response', null=True)),
            ],
            options={
                'db_table': 'tbl_trackerresponse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblTrackervehicleresponselog',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('vehicleid', models.IntegerField(blank=True, db_column='VehicleID', null=True)),
                ('description', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Description', max_length=1000, null=True)),
                ('dateadded', models.DateTimeField(blank=True, null=True)),
                ('alarmtype', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='AlarmType', max_length=200, null=True)),
                ('latitude', models.FloatField(blank=True, db_column='Latitude', null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_trackervehicleresponselog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblVehiclesubscriptioncharges',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('subscriptionid', models.IntegerField(blank=True, null=True)),
                ('vehiclecharges', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('mobilecharges', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('paymentinterval', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_vehiclesubscriptioncharges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trackeralarms',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('trackerid', models.FloatField(blank=True, db_column='TrackerID', null=True)),
                ('location_date', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Location_Date', max_length=10, null=True)),
                ('location_time', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Location_time', max_length=16, null=True)),
                ('command', models.CharField(blank=True, db_column='Command', max_length=100, null=True)),
                ('response', models.CharField(blank=True, db_column='Response', max_length=100, null=True)),
                ('commandstatus', models.CharField(blank=True, db_column='CommandStatus', max_length=100, null=True)),
                ('locationdatetime', models.DateTimeField(blank=True, db_column='Locationdatetime', null=True)),
                ('alarmtrigger', models.IntegerField(blank=True, db_column='AlarmTrigger', null=True)),
                ('alarmtype', models.CharField(blank=True, db_column='AlarmType', max_length=50, null=True)),
                ('lat', models.FloatField(blank=True, db_column='Lat', null=True)),
                ('long', models.FloatField(blank=True, db_column='Long', null=True)),
            ],
            options={
                'db_table': 'trackeralarms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trackercategory',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('tracker_category', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Tracker_Category', max_length=200, null=True)),
                ('isactive', models.IntegerField(blank=True, db_column='Isactive', null=True)),
            ],
            options={
                'db_table': 'trackercategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trackeritemimages',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('trackerid', models.IntegerField(blank=True, db_column='TrackerId', null=True)),
                ('imagename', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Imagename', max_length=200, null=True)),
            ],
            options={
                'db_table': 'trackeritemimages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trackerlisitem',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('trackername', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Trackername', max_length=200, null=True)),
                ('trackercategory', models.IntegerField(blank=True, db_column='TrackerCategory', null=True)),
                ('trackershortdesc', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Trackershortdesc', max_length=500, null=True)),
                ('price', models.DecimalField(blank=True, db_column='Price', decimal_places=2, max_digits=10, null=True)),
                ('dicountprice', models.DecimalField(blank=True, db_column='DicountPrice', decimal_places=2, max_digits=10, null=True)),
                ('original_qty', models.IntegerField(blank=True, db_column='Original_qty', null=True)),
                ('pending_qty', models.IntegerField(blank=True, db_column='Pending_qty', null=True)),
                ('isactive', models.IntegerField(blank=True, db_column='Isactive', null=True)),
                ('articlenumber', models.IntegerField(blank=True, db_column='Articlenumber', null=True)),
            ],
            options={
                'db_table': 'trackerlisitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trackerlist',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('trackername', models.CharField(blank=True, db_column='TrackerName', max_length=200, null=True)),
                ('trackername_german', models.CharField(blank=True, db_column='TrackerName_german', max_length=200, null=True)),
                ('trackerdesc', models.CharField(blank=True, db_column='Trackerdesc', max_length=500, null=True)),
                ('trackerdesc_german', models.CharField(blank=True, db_column='Trackerdesc_german', max_length=500, null=True)),
                ('price', models.DecimalField(blank=True, db_column='Price', decimal_places=2, max_digits=10, null=True)),
                ('price_german', models.DecimalField(blank=True, db_column='Price_german', decimal_places=2, max_digits=10, null=True)),
                ('discountprice', models.DecimalField(blank=True, db_column='Discountprice', decimal_places=2, max_digits=10, null=True)),
                ('discountprice_german', models.DecimalField(blank=True, db_column='Discountprice_german', decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'trackerlist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trackerorderitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderitemid', models.IntegerField(blank=True, db_column='OrderItemID', null=True)),
                ('orderid', models.IntegerField(blank=True, db_column='OrderID', null=True)),
                ('guid', models.CharField(blank=True, db_column='Guid', max_length=36, null=True)),
                ('cartid', models.CharField(blank=True, db_column='CartID', max_length=50, null=True)),
                ('trackercategoryid', models.IntegerField(blank=True, db_column='TrackerCategoryId', null=True)),
                ('trackercategory', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='TrackerCategory', max_length=200, null=True)),
                ('trackerid', models.IntegerField(blank=True, db_column='TrackerId', null=True)),
                ('trackername', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='TrackerName', max_length=200, null=True)),
                ('trackerimage', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='TrackerImage', max_length=200, null=True)),
                ('articleno', models.IntegerField(blank=True, db_column='ArticleNo', null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='Unitprice', decimal_places=2, max_digits=10, null=True)),
                ('quentity', models.IntegerField(blank=True, db_column='Quentity', null=True)),
                ('totalprice', models.DecimalField(blank=True, db_column='Totalprice', decimal_places=2, max_digits=10, null=True)),
                ('dateadded', models.DateTimeField(blank=True, db_column='DateAdded', null=True)),
                ('subscriptionid', models.IntegerField(blank=True, db_column='SubscriptionId', null=True)),
                ('subscriptionname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='SubscriptionName', max_length=200, null=True)),
                ('subscriptionpaymenttype', models.IntegerField(blank=True, db_column='SubscriptionPaymentType', null=True)),
                ('subscriptionpaymentname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='subscriptionPaymentname', max_length=50, null=True)),
                ('subscriptionuserdetails_id', models.IntegerField(blank=True, db_column='SubscriptionUserdetails_ID', null=True)),
                ('invoicenote', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Invoicenote', max_length=200, null=True)),
                ('vehicleid', models.IntegerField(blank=True, db_column='VehicleId', null=True)),
                ('vehiclename', models.CharField(blank=True, db_column='Vehiclename', max_length=200, null=True)),
                ('vehicle_licence_plate', models.CharField(blank=True, db_column='Vehicle_Licence_Plate', max_length=100, null=True)),
                ('vehiclecharges', models.DecimalField(blank=True, db_column='VehicleCharges', decimal_places=2, max_digits=10, null=True)),
                ('mobilecharges', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vehicle_paytype', models.CharField(blank=True, db_column='Vehicle_Paytype', max_length=100, null=True)),
                ('mobile_paytype', models.CharField(blank=True, db_column='Mobile_Paytype', max_length=100, null=True)),
                ('tracker_price', models.DecimalField(blank=True, db_column='Tracker_price', decimal_places=2, max_digits=10, null=True)),
                ('tracker_activationfees', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'trackerorderitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trackerorderpaymenttypemaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paytypeid', models.IntegerField(blank=True, db_column='Paytypeid', null=True)),
                ('paytypename', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Paytypename', max_length=100, null=True)),
            ],
            options={
                'db_table': 'trackerorderpaymenttypemaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trackerorders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderid', models.IntegerField(blank=True, db_column='OrderId', null=True)),
                ('cartid', models.CharField(blank=True, db_column='CartId', max_length=50, null=True)),
                ('orderguid', models.CharField(blank=True, db_column='OrderGUID', max_length=36, null=True)),
                ('orderdate', models.DateTimeField(blank=True, db_column='OrderDate', null=True)),
                ('userid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='UserId', max_length=128, null=True)),
                ('username', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='UserName', max_length=256, null=True)),
                ('email', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Email', max_length=256, null=True)),
                ('userfullname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Userfullname', max_length=200, null=True)),
                ('sid', models.IntegerField(blank=True, null=True)),
                ('bid', models.IntegerField(blank=True, null=True)),
                ('shippingaddress', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Shippingaddress', max_length=1000, null=True)),
                ('billingaddress', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Billingaddress', max_length=1000, null=True)),
                ('subtotal', models.DecimalField(blank=True, db_column='Subtotal', decimal_places=2, max_digits=10, null=True)),
                ('shippingcharges', models.DecimalField(blank=True, db_column='Shippingcharges', decimal_places=2, max_digits=10, null=True)),
                ('grandtotal', models.DecimalField(blank=True, db_column='Grandtotal', decimal_places=2, max_digits=10, null=True)),
                ('discount', models.DecimalField(blank=True, db_column='Discount', decimal_places=2, max_digits=10, null=True)),
                ('paymenttype', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Paymenttype', max_length=50, null=True)),
                ('isfail', models.IntegerField(blank=True, db_column='Isfail', null=True)),
                ('orderstatusid', models.IntegerField(blank=True, db_column='OrderstatusId', null=True)),
                ('paypal_txtid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Paypal_txtid', max_length=200, null=True)),
                ('stripecharge_id', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='stripeCharge_Id', max_length=200, null=True)),
                ('invoicetype', models.IntegerField(blank=True, db_column='InvoiceType', null=True)),
                ('subscriptionuserdetails_id', models.IntegerField(blank=True, db_column='SubscriptionUserdetails_ID', null=True)),
                ('vehicle_id', models.IntegerField(blank=True, db_column='Vehicle_ID', null=True)),
                ('redirectflow_gocardlessid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Redirectflow_GocardlessID', max_length=150, null=True)),
            ],
            options={
                'db_table': 'trackerorders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trackerorderstatusmaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderstatusid', models.IntegerField(blank=True, db_column='OrderstatusId', null=True)),
                ('orderstatus', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Orderstatus', max_length=200, null=True)),
            ],
            options={
                'db_table': 'trackerorderstatusmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerQtymanagement',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('trackerid', models.IntegerField(blank=True, db_column='TrackerId', null=True)),
                ('updatedon', models.DateTimeField(blank=True, db_column='Updatedon', null=True)),
                ('added_qty', models.IntegerField(blank=True, db_column='Added_qty', null=True)),
                ('createdby', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Createdby', max_length=128, null=True)),
            ],
            options={
                'db_table': 'tracker_qtymanagement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('userid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='UserID', max_length=128, null=True)),
                ('salutation', models.IntegerField(blank=True, null=True)),
                ('firstname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Firstname', max_length=150, null=True)),
                ('lastname', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Lastname', max_length=150, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=256, null=True)),
                ('phoneno', models.CharField(blank=True, db_column='Phoneno', max_length=20, null=True)),
                ('dob', models.DateTimeField(blank=True, db_column='DOB', null=True)),
                ('responsibleforcampingplaceid', models.IntegerField(blank=True, db_column='ResponsibleForCampingPlaceId', null=True)),
                ('address_city', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Address_City', max_length=100, null=True)),
                ('address_country', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Address_Country', max_length=200, null=True)),
                ('address_street', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Address_Street', max_length=100, null=True)),
                ('address_postal', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Address_Postal', max_length=50, null=True)),
                ('address_state', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Address_State', max_length=100, null=True)),
                ('address_latitude', models.FloatField(blank=True, db_column='Address_Latitude', null=True)),
                ('address_longitude', models.FloatField(blank=True, db_column='Address_Longitude', null=True)),
                ('creadtedby', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Creadtedby', max_length=128, null=True)),
                ('createdon', models.DateTimeField(blank=True, db_column='Createdon', null=True)),
                ('lastupdatedon', models.DateTimeField(blank=True, db_column='LastUpdatedon', null=True)),
                ('newslettersubscribe', models.IntegerField(blank=True, db_column='NewsLetterSubscribe', null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsersMerchantemployee',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('merchantid', models.IntegerField(blank=True, db_column='MerchantId', null=True)),
                ('paypalid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='PayPalId', max_length=500, null=True)),
            ],
            options={
                'db_table': 'users_merchantemployee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vehicleimages',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('vehicleid', models.IntegerField(blank=True, db_column='VehicleId', null=True)),
                ('image', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Image', max_length=200, null=True)),
            ],
            options={
                'db_table': 'vehicleimages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vehicleset',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('vehicletype', models.IntegerField(blank=True, db_column='VehicleType', null=True)),
                ('color', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Color', max_length=150, null=True)),
                ('licenseplate', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='LicensePlate', max_length=150, null=True)),
                ('buildingyear', models.IntegerField(blank=True, db_column='BuildingYear', null=True)),
                ('insucrencecompany', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='InsucrenceCompany', max_length=150, null=True)),
                ('insurencenumber', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='InsurenceNumber', max_length=150, null=True)),
                ('userid', models.IntegerField(blank=True, db_column='UserId', null=True)),
                ('modeltypename', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='ModelTypeName', max_length=150, null=True)),
                ('brandid', models.IntegerField(blank=True, db_column='BrandId', null=True)),
                ('awning_type', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Awning_Type', max_length=150, null=True)),
                ('awning_brand', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Awning_Brand', max_length=150, null=True)),
                ('awning_length', models.FloatField(blank=True, db_column='Awning_Length', null=True)),
                ('solarsystem_numberofcells', models.IntegerField(blank=True, db_column='SolarSystem_NumberOfCells', null=True)),
                ('imageid', models.IntegerField(blank=True, db_column='ImageId', null=True)),
                ('bicyclerackondrawbar_brand', models.TextField(blank=True, db_column='BicycleRackOnDrawbar_Brand', null=True)),
                ('bicyclerackondrawbar_model', models.TextField(blank=True, db_column='BicycleRackOnDrawbar_Model', null=True)),
                ('bicyclerackondrawbar_number', models.IntegerField(blank=True, db_column='BicycleRackOnDrawbar_Number', null=True)),
                ('bicyclerackonstern_brand', models.TextField(blank=True, db_column='BicycleRackOnStern_Brand', null=True)),
                ('bicyclerackonstern_model', models.TextField(blank=True, db_column='BicycleRackOnStern_Model', null=True)),
                ('bicyclerackonstern_number', models.IntegerField(blank=True, db_column='BicycleRackOnStern_Number', null=True)),
                ('motorcyclecarrieronrear_brand', models.TextField(blank=True, db_column='MotorcycleCarrierOnRear_Brand', null=True)),
                ('motorcyclecarrieronrear_model', models.TextField(blank=True, db_column='MotorcycleCarrierOnRear_Model', null=True)),
                ('motorcycleormotorcycleatrear_brand', models.TextField(blank=True, db_column='MotorcycleOrMotorcycleAtRear_Brand', null=True)),
                ('motorcycleormotorcycleatrear_model', models.TextField(blank=True, db_column='MotorcycleOrMotorcycleAtRear_Model', null=True)),
                ('motorcycleormotorcycleatrear_plate', models.TextField(blank=True, db_column='MotorcycleOrMotorcycleAtRear_Plate', null=True)),
                ('motorcycleormotorcycleatrear_color', models.TextField(blank=True, db_column='MotorcycleOrMotorcycleAtRear_Color', null=True)),
                ('mover_brand', models.TextField(blank=True, db_column='Mover_Brand', null=True)),
                ('mover_model', models.TextField(blank=True, db_column='Mover_Model', null=True)),
                ('rooftopairconditioning_brand', models.TextField(blank=True, db_column='RooftopAirConditioning_Brand', null=True)),
                ('rooftopairconditioning_model', models.TextField(blank=True, db_column='RooftopAirConditioning_Model', null=True)),
                ('satelitesystem_brand', models.TextField(blank=True, db_column='SateliteSystem_Brand', null=True)),
                ('satelitesystem_model', models.TextField(blank=True, db_column='SateliteSystem_Model', null=True)),
                ('size_width', models.IntegerField(blank=True, db_column='Size_Width', null=True)),
                ('size_height', models.IntegerField(blank=True, db_column='Size_Height', null=True)),
                ('size_length', models.IntegerField(blank=True, db_column='Size_Length', null=True)),
                ('createdby', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Createdby', max_length=128, null=True)),
                ('trackerid', models.FloatField(blank=True, db_column='TrackerId', null=True)),
                ('iconimage', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='IconImage', max_length=200, null=True)),
                ('ispay', models.IntegerField(blank=True, db_column='Ispay', null=True)),
                ('subscription_id', models.IntegerField(blank=True, db_column='Subscription_ID', null=True)),
                ('payment_subscriptionpayid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Payment_subscriptionPayID', max_length=150, null=True)),
                ('istrackerconfiguration', models.IntegerField(blank=True, db_column='Istrackerconfiguration', null=True)),
                ('tracker_mobilenumber', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Tracker_mobilenumber', max_length=50, null=True)),
                ('tracker_mobile_apn', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Tracker_mobile_apn', max_length=50, null=True)),
                ('iscentralnumberconfiguration', models.IntegerField(blank=True, db_column='Iscentralnumberconfiguration', null=True)),
                ('isgeofanceactive', models.IntegerField(blank=True, db_column='Isgeofanceactive', null=True)),
                ('isoverspeedactive', models.IntegerField(blank=True, db_column='Isoverspeedactive', null=True)),
                ('isvibrationactive', models.IntegerField(blank=True, db_column='Isvibrationactive', null=True)),
                ('islowbatteryactive', models.IntegerField(blank=True, db_column='Islowbatteryactive', null=True)),
                ('ispoweroffactive', models.IntegerField(blank=True, db_column='Ispoweroffactive', null=True)),
            ],
            options={
                'db_table': 'vehicleset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vehicletypemaster',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('vehicletype', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='VehicleType', max_length=100, null=True)),
            ],
            options={
                'db_table': 'vehicletypemaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Websitegraphics',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('banner_image1', models.TextField(blank=True, db_column='Banner_Image1', null=True)),
                ('banner_image2', models.TextField(blank=True, db_column='Banner_Image2', null=True)),
                ('banner_image3', models.TextField(blank=True, db_column='Banner_Image3', null=True)),
                ('product_image1', models.TextField(blank=True, db_column='Product_Image1', null=True)),
                ('product_image2', models.TextField(blank=True, db_column='Product_Image2', null=True)),
                ('product_image3', models.TextField(blank=True, db_column='Product_Image3', null=True)),
                ('shop_background_image', models.TextField(blank=True, db_column='Shop_Background_Image', null=True)),
            ],
            options={
                'db_table': 'websitegraphics',
                'managed': False,
            },
        ),
    ]
