# Generated by Django 3.2.8 on 2021-11-05 16:50

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('track', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Campingplaces',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Name', max_length=150, null=True)),
                ('qwnerid', models.IntegerField(blank=True, db_column='QwnerId', null=True)),
                ('regulations_acsiclubcardacceptedasproofofidentity', models.IntegerField(blank=True, db_column='regulations_ACSIClubCardAcceptedasProofofIdentity', null=True)),
                ('regulations_passportidentitycardrequired', models.IntegerField(blank=True, db_column='regulations_Passportidentitycardrequired', null=True)),
                ('regulations_seniorcitizendiscount', models.IntegerField(blank=True, null=True)),
                ('regulations_paymentbycreditcardpossible', models.IntegerField(blank=True, db_column='regulations_Paymentbycreditcardpossible', null=True)),
                ('regulations_paymentbydebitcard_maestropossible', models.IntegerField(blank=True, db_column='regulations_Paymentbydebitcard_Maestropossible', null=True)),
                ('regulations_duringthenoonbreakentranceprohibited', models.IntegerField(blank=True, db_column='regulations_Duringthenoonbreakentranceprohibited', null=True)),
                ('regulations_carfreeparkingspace', models.IntegerField(blank=True, db_column='regulations_Carfreeparkingspace', null=True)),
                ('regulations_nodogsallowedinlowseason', models.IntegerField(blank=True, db_column='regulations_Nodogsallowedinlowseason', null=True)),
                ('regulations_only1dog_leashed_allowedinlowseason', models.IntegerField(blank=True, db_column='regulations_Only1dog_leashed_allowedinlowseason', null=True)),
                ('regulations_severaldogs_leashed_allowedinlowseason', models.IntegerField(blank=True, db_column='regulations_Severaldogs_leashed_allowedinlowseason', null=True)),
                ('regulations_nodogsallowedinhighseason', models.IntegerField(blank=True, db_column='regulations_Nodogsallowedinhighseason', null=True)),
                ('regulations_only1dog_leashed_allowedinthehighseason', models.IntegerField(blank=True, db_column='regulations_Only1dog_leashed_allowedinthehighseason', null=True)),
                ('regualtions_severaldogs_leashed_allowedinthehighseason', models.IntegerField(blank=True, db_column='regualtions_Severaldogs_leashed_allowedinthehighseason', null=True)),
                ('regualtions_tentsallowed', models.IntegerField(blank=True, db_column='regualtions_Tentsallowed', null=True)),
                ('regualtions_caravanallowed', models.IntegerField(blank=True, db_column='regualtions_Caravanallowed', null=True)),
                ('regualtions_alsosuitableforcaravans_5_5mexclusivedrawbar', models.IntegerField(blank=True, db_column='regualtions_Alsosuitableforcaravans_5_5mexclusivedrawbar', null=True)),
                ('regualtions_doubleaxleallowed', models.IntegerField(blank=True, db_column='regualtions_Doubleaxleallowed', null=True)),
                ('regualtions_motorhomesallowed', models.IntegerField(blank=True, db_column='regualtions_Motorhomesallowed', null=True)),
                ('regualtions_alsomotorhomessuitable8mand4000kg', models.IntegerField(blank=True, db_column='regualtions_Alsomotorhomessuitable8mand4000kg', null=True)),
                ('regualtions_smalladditionaltentallowed', models.IntegerField(blank=True, db_column='regualtions_Smalladditionaltentallowed', null=True)),
                ('regualtions_adaccampingcardaccepted', models.IntegerField(blank=True, db_column='regualtions_ADACCampingCardAccepted', null=True)),
                ('regualtions_adackeyeuropecardaccepted', models.IntegerField(blank=True, db_column='regualtions_ADACKeyEuropeCardAccepted', null=True)),
                ('regualtions_acsicardakzeptiert', models.IntegerField(blank=True, db_column='regualtions_ACSICardAkzeptiert', null=True)),
                ('regualtions_ccicardaccepted', models.IntegerField(blank=True, db_column='regualtions_CCICardAccepted', null=True)),
                ('regualtions_myplacecardaccepted', models.IntegerField(blank=True, db_column='regualtions_MyPlaceCardAccepted', null=True)),
                ('regualtions_bestdealcampingcard', models.IntegerField(blank=True, db_column='regualtions_BestDealCampingCard', null=True)),
                ('regulations_topcampingcard', models.IntegerField(blank=True, db_column='regulations_TopCampingCard', null=True)),
                ('regualtions_anwbdetectivecampingcard', models.IntegerField(blank=True, db_column='regualtions_anwbDetectiveCampingCard', null=True)),
                ('address_city', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=100, null=True)),
                ('address_country', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='address_Country', max_length=200, null=True)),
                ('address_road', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=100, null=True)),
                ('address_postcode', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='address_PostCode', max_length=20, null=True)),
                ('address_state', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=100, null=True)),
                ('address_degreeoflatitude', models.FloatField(blank=True, null=True)),
                ('address_degreeoflongitude', models.FloatField(blank=True, null=True)),
                ('contactdetails_phone', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=20, null=True)),
                ('contactdetails_email', models.CharField(blank=True, db_column='contactdetails_Email', max_length=256, null=True)),
                ('basedata_wlan', models.IntegerField(blank=True, db_column='basedata_WLAN', null=True)),
                ('basedata_acsicardavailable', models.IntegerField(blank=True, db_column='basedata_ACSIcardavailable', null=True)),
                ('basedata_acsiclubid', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='basedata_ACSIClubID', max_length=100, null=True)),
                ('basedata_routedescription', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=200, null=True)),
                ('basedata_wintercamping', models.IntegerField(blank=True, db_column='basedata_Wintercamping', null=True)),
                ('basedata_wheelchairaccessible', models.IntegerField(blank=True, db_column='basedata_Wheelchairaccessible', null=True)),
                ('basedata_fkk', models.IntegerField(blank=True, db_column='basedata_FKK', null=True)),
                ('basedata_powerprotectionina', models.IntegerField(blank=True, db_column='basedata_PowerprotectioninA', null=True)),
                ('basedata_europlug', models.IntegerField(blank=True, null=True)),
                ('basedata_heightofthecampsite', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='basedata_Heightofthecampsite', max_length=100, null=True)),
                ('basedata_areaofthecampsite', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='basedata_Areaofthecampsite', max_length=100, null=True)),
                ('basedata_numberoftouristplaces', models.IntegerField(blank=True, db_column='basedata_Numberoftouristplaces', null=True)),
                ('basedata_numberofrentalproperties_permanentcampers', models.IntegerField(blank=True, db_column='basedata_Numberofrentalproperties_permanentcampers', null=True)),
                ('locationsoilplants_nearamotorwayexit_10km', models.IntegerField(blank=True, db_column='Locationsoilplants_Nearamotorwayexit_10km', null=True)),
                ('locationsoilplants_locatedintheforest', models.IntegerField(blank=True, db_column='Locationsoilplants_Locatedintheforest', null=True)),
                ('locationsoilplants_locatedontheriverorstream_maxkm', models.IntegerField(blank=True, db_column='Locationsoilplants_Locatedontheriverorstream_maxkm', null=True)),
                ('locationsiloplants_locatedonarecreationallake_maxkm', models.IntegerField(blank=True, db_column='Locationsiloplants_Locatedonarecreationallake_maxkm', null=True)),
                ('locationsoilplants_locatedbythesea_within_km', models.IntegerField(blank=True, db_column='Locationsoilplants_Locatedbythesea_within_km', null=True)),
                ('locationsoilplants_panorama', models.IntegerField(blank=True, db_column='Locationsoilplants_panorama', null=True)),
                ('locationsoilplants_lawn', models.IntegerField(blank=True, db_column='Locationsoilplants_lawn', null=True)),
                ('locationsoilplants_sandybeach', models.IntegerField(blank=True, db_column='Locationsoilplants_sandybeach', null=True)),
                ('locationsoilplants_beacharea', models.IntegerField(blank=True, db_column='Locationsoilplants_beacharea', null=True)),
                ('locationsoilplants_gravelbeach', models.IntegerField(blank=True, db_column='Locationsoilplants_gravelbeach', null=True)),
                ('locationssoilplants_stonybeach', models.IntegerField(blank=True, db_column='Locationssoilplants_Stonybeach', null=True)),
                ('locationsoilplants_artificiallyfortifiedbeach', models.IntegerField(blank=True, db_column='Locationsoilplants_Artificiallyfortifiedbeach', null=True)),
                ('locationsoilplants_rockycoast', models.IntegerField(blank=True, db_column='Locationsoilplants_rockycoast', null=True)),
                ('locationsoilplants_forcaravans_motorhomesdifficulttoaccess', models.IntegerField(blank=True, db_column='Locationsoilplants_Forcaravans_motorhomesdifficulttoaccess', null=True)),
                ('locationsoilplants_public_transportwithinashortdistance_maxkm', models.IntegerField(blank=True, db_column='Locationsoilplants_Public_Transportwithinashortdistance_maxkm', null=True)),
                ('locationsoilplants_grass', models.IntegerField(blank=True, db_column='Locationsoilplants_grass', null=True)),
                ('locationssoilplants_sandysoil', models.IntegerField(blank=True, db_column='Locationssoilplants_sandysoil', null=True)),
                ('locationsoilplants_hardground', models.IntegerField(blank=True, db_column='Locationsoilplants_Hardground', null=True)),
                ('locationsoilplants_attachedparkingspace', models.IntegerField(blank=True, db_column='Locationsoilplants_Attachedparkingspace', null=True)),
                ('locationsoilplants_terracedsite', models.IntegerField(blank=True, db_column='Locationsoilplants_terracedsite', null=True)),
                ('locationsoilplants_hillside', models.IntegerField(blank=True, db_column='Locationsoilplants_hillside', null=True)),
                ('locationsoilplants_parceledpitches', models.IntegerField(blank=True, db_column='Locationsoilplants_Parceledpitches', null=True)),
                ('locationsoilplants_placeswithoutshade', models.IntegerField(blank=True, db_column='Locationsoilplants_Placeswithoutshade', null=True)),
                ('locationsoilplants_placeswithsomeshade', models.IntegerField(blank=True, db_column='Locationsoilplants_Placeswithsomeshade', null=True)),
                ('locationsoilplants_placeswithalotofshade', models.IntegerField(blank=True, db_column='Locationsoilplants_Placeswithalotofshade', null=True)),
                ('sportsandgames_someplaygroundequipment', models.IntegerField(blank=True, db_column='Sportsandgames_Someplaygroundequipment', null=True)),
                ('sportsandgames_childrensplayground', models.IntegerField(blank=True, db_column='Sportsandgames_ChildrensPlayground', null=True)),
                ('sportsandgames_indoorplayground', models.IntegerField(blank=True, db_column='Sportsandgames_Indoorplayground', null=True)),
                ('sportsandgames_waterplayground', models.IntegerField(blank=True, db_column='Sportsandgames_Waterplayground', null=True)),
                ('sportsandgames_mulitsportfeld', models.IntegerField(blank=True, db_column='Sportsandgames_Mulitsportfeld', null=True)),
                ('sportsandgames_beachvolleyball', models.IntegerField(blank=True, db_column='Sportsandgames_Beachvolleyball', null=True)),
                ('sportsandgames_horsebackriding', models.IntegerField(blank=True, db_column='Sportsandgames_Horsebackriding', null=True)),
                ('sportsandgames_riding_pony', models.IntegerField(blank=True, db_column='Sportsandgames_Riding_pony', null=True)),
                ('sportsandgames_minigolf', models.IntegerField(blank=True, db_column='Sportsandgames_Minigolf', null=True)),
                ('sportsandgames_golfcourse_min6holes', models.IntegerField(blank=True, db_column='Sportsandgames_Golfcourse_min6holes', null=True)),
                ('sportsandgames_golfcoursewithinashortdistance_max10km', models.IntegerField(blank=True, db_column='Sportsandgames_Golfcoursewithinashortdistance_max10km', null=True)),
                ('sportsandgames_tabletennis', models.IntegerField(blank=True, db_column='Sportsandgames_Tabletennis', null=True)),
                ('sportsandgames_tennis', models.IntegerField(blank=True, db_column='Sportsandgames_Tennis', null=True)),
                ('sportsandgames_tennislessons', models.IntegerField(blank=True, db_column='Sportsandgames_Tennislessons', null=True)),
                ('sportsandgames_squash', models.IntegerField(blank=True, db_column='Sportsandgames_squash', null=True)),
                ('sportsandgames_bowlingand_orbowlingalley', models.IntegerField(blank=True, db_column='Sportsandgames_Bowlingand_orbowlingalley', null=True)),
                ('sportsandgames_boccia', models.IntegerField(blank=True, db_column='Sportsandgames_Boccia', null=True)),
                ('sportsandgames_archery', models.IntegerField(blank=True, db_column='Sportsandgames_archery', null=True)),
                ('sportsandgmaes_trampoline', models.IntegerField(blank=True, db_column='Sportsandgmaes_trampoline', null=True)),
                ('sportsandgames_bouncy', models.IntegerField(blank=True, db_column='Sportsandgames_bouncy', null=True)),
                ('sportsandgames_climbingwall', models.IntegerField(blank=True, db_column='Sportsandgames_climbingwall', null=True)),
                ('sportsandgmaes_geocaching', models.IntegerField(blank=True, db_column='Sportsandgmaes_Geocaching', null=True)),
                ('rw_excursionprogram_atleasttwiceaweekhighseason', models.IntegerField(blank=True, db_column='Rw_Excursionprogram_atleasttwiceaweekhighseason', null=True)),
                ('rw_aniforchildupto12y_atleasttwiceaweekinhighseason', models.IntegerField(blank=True, db_column='Rw_Aniforchildupto12y_atleasttwiceaweekinhighseason', null=True)),
                ('rw_aniforchildupto13_18y_atleasttwiceaweekinhighseason', models.IntegerField(blank=True, db_column='Rw_Aniforchildupto13_18y_atleasttwiceaweekinhighseason', null=True)),
                ('rw_aniforadults_atleasttwiceaweekinhighseason', models.IntegerField(blank=True, db_column='Rw_Aniforadults_atleasttwiceaweekinhighseason', null=True)),
                ('rw_guidedwalks', models.IntegerField(blank=True, db_column='Rw_Guidedwalks', null=True)),
                ('rw_markedfußwandereungenthecampsite', models.IntegerField(blank=True, db_column='Rw_MarkedFußwandereungenthecampsite', null=True)),
                ('rw_gpswalks', models.IntegerField(blank=True, db_column='Rw_GPSwalks', null=True)),
                ('rw_amcampingplatzbeginnendefahrradrouten', models.IntegerField(blank=True, db_column='Rw_AmCampingplatzbeginnendeFahrradrouten', null=True)),
                ('rw_sittingroom', models.IntegerField(blank=True, db_column='Rw_sittingroom', null=True)),
                ('rw_daycarecenter', models.IntegerField(blank=True, db_column='Rw_daycarecenter', null=True)),
                ('rw_animalmeadow', models.IntegerField(blank=True, db_column='Rw_animalmeadow', null=True)),
                ('rw_miniclub_mind_4x_wöchentlich_hochsaison', models.IntegerField(blank=True, db_column='Rw_Miniclub_mind_4x_wöchentlich_Hochsaison', null=True)),
                ('rw_discotheque', models.IntegerField(blank=True, db_column='Rw_Discotheque', null=True)),
                ('rw_discoevenings', models.IntegerField(blank=True, db_column='Rw_Discoevenings', null=True)),
                ('rw_watchtv', models.IntegerField(blank=True, db_column='Rw_watchTV', null=True)),
                ('rw_slots', models.IntegerField(blank=True, db_column='Rw_slots', null=True)),
                ('rw_pool_billiards', models.IntegerField(blank=True, db_column='Rw_Pool_Billiards', null=True)),
                ('rw_gym', models.IntegerField(blank=True, db_column='Rw_gym', null=True)),
                ('rw_solarium', models.IntegerField(blank=True, db_column='Rw_solarium', null=True)),
                ('rw_sauna', models.IntegerField(blank=True, db_column='Rw_sauna', null=True)),
                ('rw_whirlpool', models.IntegerField(blank=True, db_column='Rw_Whirlpool', null=True)),
                ('rw_steambath', models.IntegerField(blank=True, db_column='Rw_steambath', null=True)),
                ('rw_thermalbaths', models.IntegerField(blank=True, db_column='Rw_thermalbaths', null=True)),
                ('rw_massage', models.IntegerField(blank=True, db_column='Rw_Massage', null=True)),
                ('rw_hydromassage', models.IntegerField(blank=True, db_column='Rw_Hydromassage', null=True)),
                ('rw_beautycenter', models.IntegerField(blank=True, db_column='Rw_BeautyCenter', null=True)),
                ('sr_freshbreadavailableatthecampsite', models.IntegerField(blank=True, db_column='Sr_Freshbreadavailableatthecampsite', null=True)),
                ('sr_foodrestrictedavailable', models.IntegerField(blank=True, db_column='Sr_Foodrestrictedavailable', null=True)),
                ('sr_foodgreatchoice', models.IntegerField(blank=True, db_column='Sr_Foodgreatchoice', null=True)),
                ('sr_snack', models.IntegerField(blank=True, db_column='Sr_snack', null=True)),
                ('sr_takeawayfood', models.IntegerField(blank=True, db_column='Sr_Takeawayfood', null=True)),
                ('sr_pizzeria', models.IntegerField(blank=True, db_column='Sr_pizzeria', null=True)),
                ('sr_bar', models.IntegerField(blank=True, db_column='Sr_Bar', null=True)),
                ('sr_sbrestaurant', models.IntegerField(blank=True, db_column='Sr_SBRestaurant', null=True)),
                ('sr_restaurant_withsmallmenu', models.IntegerField(blank=True, db_column='Sr_Restaurant_withsmallmenu', null=True)),
                ('sr_restaurant_withbigmap', models.IntegerField(blank=True, db_column='Sr_Restaurant_withbigmap', null=True)),
                ('sr_gasavailable', models.IntegerField(blank=True, db_column='Sr_Gasavailable', null=True)),
                ('sr_freezingthecoolingelements', models.IntegerField(blank=True, db_column='Sr_Freezingthecoolingelements', null=True)),
                ('sr_cooliceavailable', models.IntegerField(blank=True, db_column='Sr_Cooliceavailable', null=True)),
                ('relaxationatthewater_outdoorpool', models.IntegerField(blank=True, db_column='Relaxationatthewater_outdoorpool', null=True)),
                ('relaxationatthewater_outdoorheatedpool', models.IntegerField(blank=True, db_column='Relaxationatthewater_Outdoorheatedpool', null=True)),
                ('relaxationatthewater_sunroofnatatorium', models.IntegerField(blank=True, db_column='Relaxationatthewater_SunroofNatatorium', null=True)),
                ('relaxationatthewater_sunroofswimmingpoolheated', models.IntegerField(blank=True, db_column='Relaxationatthewater_Sunroofswimmingpoolheated', null=True)),
                ('relaxationatthewater_childrenspool_for1_3yearolds_40cm', models.IntegerField(blank=True, db_column='Relaxationatthewater_Childrenspool_for1_3yearolds_40cm', null=True)),
                ('relaxationatthewater_heatedpoolforchildren', models.IntegerField(blank=True, db_column='Relaxationatthewater_Heatedpoolforchildren', null=True)),
                ('relaxationatthewater_waterslide_10m', models.IntegerField(blank=True, db_column='Relaxationatthewater_Waterslide_10m', null=True)),
                ('relaxationatthewater_waterpark', models.IntegerField(blank=True, db_column='Relaxationatthewater_Waterpark', null=True)),
                ('relaxationatthewater_swimmingintheriver_streammaxkm', models.IntegerField(blank=True, db_column='Relaxationatthewater_Swimmingintheriver_streammaxkm', null=True)),
                ('relaxationatthewater_swimminginthesea_maxkm', models.IntegerField(blank=True, db_column='Relaxationatthewater_Swimminginthesea_maxkm', null=True)),
                ('relaxationatthewater_bathinginarecreational_bathinglake_maxkm', models.IntegerField(blank=True, db_column='Relaxationatthewater_Bathinginarecreational_bathinglake_maxkm', null=True)),
                ('relaxationatthewater_beachshowers', models.IntegerField(blank=True, db_column='Relaxationatthewater_beachshowers', null=True)),
                ('relaxationatthewater_fishing', models.IntegerField(blank=True, db_column='Relaxationatthewater_fishing', null=True)),
                ('relaxationatthewater_diving', models.IntegerField(blank=True, db_column='Relaxationatthewater_diving', null=True)),
                ('relaxationatthewater_snorkelling', models.IntegerField(blank=True, db_column='Relaxationatthewater_Snorkelling', null=True)),
                ('relaxationatthewater_windsurfingallowed', models.IntegerField(blank=True, db_column='Relaxationatthewater_Windsurfingallowed', null=True)),
                ('relaxationatthewater_windsurfingcourse', models.IntegerField(blank=True, db_column='Relaxationatthewater_Windsurfingcourse', null=True)),
                ('relaxationatthewater_sailingallowed', models.IntegerField(blank=True, db_column='Relaxationatthewater_Sailingallowed', null=True)),
                ('relaxationatthewater_segelkurs', models.IntegerField(blank=True, db_column='Relaxationatthewater_Segelkurs', null=True)),
                ('relaxationatthewater_rafting_kayaking_rafting', models.IntegerField(blank=True, db_column='Relaxationatthewater_Rafting_kayaking_rafting', null=True)),
                ('relaxationatthewater_kayakingcourse', models.IntegerField(blank=True, db_column='Relaxationatthewater_kayakingcourse', null=True)),
                ('relaxationatthewater_waterskiingallowed', models.IntegerField(blank=True, db_column='Relaxationatthewater_Waterskiingallowed', null=True)),
                ('relaxationatthewater_ownboatallowed', models.IntegerField(blank=True, db_column='Relaxationatthewater_Ownboatallowed', null=True)),
                ('relaxationatthewater_boatslip', models.IntegerField(blank=True, db_column='Relaxationatthewater_Boatslip', null=True)),
                ('washingup_dishwasherwithcoldwater', models.IntegerField(blank=True, db_column='Washingup_Dishwasherwithcoldwater', null=True)),
                ('washingup_dishwasherwithhotwater', models.IntegerField(blank=True, db_column='Washingup_Dishwasherwithhotwater', null=True)),
                ('washingup_dishwasher', models.IntegerField(blank=True, db_column='Washingup_dishwasher', null=True)),
                ('washingup_laundrysinkwithcoldwater', models.IntegerField(blank=True, db_column='Washingup_Laundrysinkwithcoldwater', null=True)),
                ('washingup_laundrysinkwithhotwater', models.IntegerField(blank=True, db_column='Washingup_Laundrysinkwithhotwater', null=True)),
                ('washingup_washingmachine', models.IntegerField(blank=True, db_column='Washingup_Washingmachine', null=True)),
                ('washingup_clothesdryer', models.IntegerField(blank=True, db_column='Washingup_clothesdryer', null=True)),
                ('washingup_roningfacilities', models.IntegerField(blank=True, db_column='Washingup_roningfacilities', null=True)),
                ('washingup_individualcookingopportunity', models.IntegerField(blank=True, db_column='Washingup_Individualcookingopportunity', null=True)),
                ('washingup_cookingfacilitiesforgroups', models.IntegerField(blank=True, db_column='Washingup_Cookingfacilitiesforgroups', null=True)),
                ('washingup_microwave', models.IntegerField(blank=True, db_column='Washingup_microwave', null=True)),
                ('si_sink_coldwater', models.IntegerField(blank=True, db_column='Si_Sink_coldwater', null=True)),
                ('si_sink_warmwater', models.IntegerField(blank=True, db_column='Si_Sink_warmwater', null=True)),
                ('si_singlewashcabins_coldwater', models.IntegerField(blank=True, db_column='Si_Singlewashcabins_coldwater', null=True)),
                ('si_singlewashcabins_warmwater', models.IntegerField(blank=True, db_column='Si_Singlewashcabins_warmwater', null=True)),
                ('si_showers_coldwater', models.IntegerField(blank=True, db_column='Si_Showers_coldwater', null=True)),
                ('si_showers_warmwater', models.IntegerField(blank=True, db_column='Si_Showers_warmwater', null=True)),
                ('si_familyshowers', models.IntegerField(blank=True, db_column='Si_familyshowers', null=True)),
                ('si_seniorshower_withextraholders', models.IntegerField(blank=True, db_column='Si_Seniorshower_withextraholders', null=True)),
                ('si_familysanitary', models.IntegerField(blank=True, db_column='Si_familysanitary', null=True)),
                ('si_heatedtoilets', models.IntegerField(blank=True, db_column='Si_Heatedtoilets', null=True)),
                ('si_childrenssanitary', models.IntegerField(blank=True, db_column='Si_childrenssanitary', null=True)),
                ('si_privatesanitary', models.IntegerField(blank=True, db_column='Si_privatesanitary', null=True)),
                ('si_privatetoilet', models.IntegerField(blank=True, db_column='Si_privatetoilet', null=True)),
                ('si_toiletseat', models.IntegerField(blank=True, db_column='Si_toiletseat', null=True)),
                ('si_frenchtoilet', models.IntegerField(blank=True, db_column='Si_Frenchtoilet', null=True)),
                ('si_toiletfortheelderly', models.IntegerField(blank=True, db_column='Si_toiletfortheelderly', null=True)),
                ('si_toiletpaperavailable', models.IntegerField(blank=True, db_column='Si_Toiletpaperavailable', null=True)),
                ('si_spoutforchemicaltoilet', models.IntegerField(blank=True, db_column='Si_Spoutforchemicaltoilet', null=True)),
                ('si_changingroom', models.IntegerField(blank=True, db_column='Si_changingroom', null=True)),
                ('si_waterconnectionon_atthepitch_max15m', models.IntegerField(blank=True, db_column='Si_Waterconnectionon_atthepitch_max15m', null=True)),
                ('si_wastewaterdischarge_parkingspace_max15m', models.IntegerField(blank=True, db_column='Si_Wastewaterdischarge_parkingspace_max15m', null=True)),
                ('si_waterpointon_atthepitch_max15m', models.IntegerField(blank=True, db_column='Si_Waterpointon_atthepitch_max15m', null=True)),
                ('sportaccessoriesrental_tents', models.IntegerField(blank=True, null=True)),
                ('sportaccessoriesrental_lodgetentwithoutplumbing', models.IntegerField(blank=True, db_column='sportaccessoriesrental_Lodgetentwithoutplumbing', null=True)),
                ('sportaccessoriesrental_lodgetentwithplumbing', models.IntegerField(blank=True, db_column='sportaccessoriesrental_Lodgetentwithplumbing', null=True)),
                ('sportaccessoriesrental_caravan', models.IntegerField(blank=True, null=True)),
                ('sportaccessoriesrental_mobilehomes', models.IntegerField(blank=True, null=True)),
                ('sportaccessoriesrental_cabins', models.IntegerField(blank=True, null=True)),
                ('sportaccessoriesrental_room', models.IntegerField(blank=True, null=True)),
                ('sportaccessoriesrental_studios', models.IntegerField(blank=True, db_column='sportaccessoriesrental_Studios', null=True)),
                ('sportaccessoriesrental_apartments', models.IntegerField(blank=True, null=True)),
                ('sportaccessoriesrental_bungalow_chalets', models.IntegerField(blank=True, db_column='sportaccessoriesrental_Bungalow_Chalets', null=True)),
                ('sportaccessoriesrental_coolingfan', models.IntegerField(blank=True, null=True)),
                ('sportaccessoriesrental_safes', models.IntegerField(blank=True, null=True)),
                ('sportaccessoriesrental_surfboards', models.IntegerField(blank=True, null=True)),
                ('sportaccessoriesrental_motorboats', models.IntegerField(blank=True, db_column='sportaccessoriesrental_Motorboats', null=True)),
                ('sportaccessoriesrental_sailboats', models.IntegerField(blank=True, null=True)),
                ('sportaccessoriesrental_rowboats', models.IntegerField(blank=True, null=True)),
                ('sportaccessoriesrental_canoes', models.IntegerField(blank=True, null=True)),
                ('sportaccessoriesrental_kayaks', models.IntegerField(blank=True, null=True)),
                ('sportaccessoriesrental_rentalofexchangeequipment', models.IntegerField(blank=True, db_column='sportaccessoriesrental_Rentalofexchangeequipment', null=True)),
                ('sportaccessoriesrental_pedalboats', models.IntegerField(blank=True, null=True)),
                ('sportaccessoriesrental_mountainbikes', models.IntegerField(blank=True, null=True)),
                ('sportaccessoriesrental_cycles', models.IntegerField(blank=True, db_column='sportaccessoriesrental_Cycles', null=True)),
                ('sportaccessoriesrental_e_bikes', models.IntegerField(blank=True, db_column='sportaccessoriesrental_E_Bikes', null=True)),
                ('sportaccessoriesrental_scooter', models.IntegerField(blank=True, null=True)),
                ('sportaccessoriesrental_kettcar_pedalcar', models.IntegerField(blank=True, db_column='sportaccessoriesrental_Kettcar_pedalcar', null=True)),
                ('sportaccessoriesrental_cars', models.IntegerField(blank=True, null=True)),
                ('general_germanspokenatthereception_inhighseason', models.IntegerField(blank=True, db_column='General_Germanspokenatthereception_inhighseason', null=True)),
                ('general_reservationinhighseasonisrecommended', models.IntegerField(blank=True, db_column='General_Reservationinhighseasonisrecommended', null=True)),
                ('general_reservationinlowseasonisrecommended', models.IntegerField(blank=True, db_column='General_Reservationinlowseasonisrecommended', null=True)),
                ('general_reservationpossiblewithcampingcardacsi', models.IntegerField(blank=True, db_column='General_ReservationpossiblewithCampingCardACSI', null=True)),
                ('general_pitcheswithradioandtvconnection', models.IntegerField(blank=True, db_column='General_PitcheswithradioandTVconnection', null=True)),
                ('general_specialpitchesforcampers', models.IntegerField(blank=True, db_column='General_Specialpitchesforcampers', null=True)),
                ('general_supplyanddisposalstationformotorhomes', models.IntegerField(blank=True, db_column='General_Supplyanddisposalstationformotorhomes', null=True)),
                ('general_fieldlighting', models.IntegerField(blank=True, db_column='General_fieldlighting', null=True)),
                ('general_guardedterrain', models.IntegerField(blank=True, db_column='General_Guardedterrain', null=True)),
                ('general_quietduringthedayandatnight', models.IntegerField(blank=True, db_column='General_Quietduringthedayandatnight', null=True)),
                ('general_onlyquietatnight', models.IntegerField(blank=True, db_column='General_Onlyquietatnight', null=True)),
                ('general_separateyouthplace', models.IntegerField(blank=True, db_column='General_Separateyouthplace', null=True)),
                ('general_dogwalkingarea', models.IntegerField(blank=True, db_column='General_Dogwalkingarea', null=True)),
                ('general_internetaccess', models.IntegerField(blank=True, db_column='General_Internetaccess', null=True)),
                ('general_wifi_wifihotspot', models.IntegerField(blank=True, db_column='General_Wifi_Wifihotspot', null=True)),
                ('general_w_lan_wifi_80', models.IntegerField(blank=True, db_column='General_W_LAN_Wifi_80', null=True)),
                ('general_campinginfoapp', models.IntegerField(blank=True, db_column='General_CampingInfoApp', null=True)),
                ('general_anykindofbarbecueallowed', models.IntegerField(blank=True, db_column='General_Anykindofbarbecueallowed', null=True)),
                ('general_charcoalgrillallowed', models.IntegerField(blank=True, db_column='General_Charcoalgrillallowed', null=True)),
                ('general_gasgrillallowed', models.IntegerField(blank=True, db_column='General_Gasgrillallowed', null=True)),
                ('general_electricgrillallowed', models.IntegerField(blank=True, db_column='General_Electricgrillallowed', null=True)),
                ('general_commonshaftgrill', models.IntegerField(blank=True, db_column='General_CommonshaftGrill', null=True)),
                ('general_temporarilyoutside_cpslocatedwithoutpower', models.IntegerField(blank=True, db_column='General_Temporarilyoutside_CPslocatedwithoutpower', null=True)),
                ('general_temporarilyoutside_ofthecpswithelectricity', models.IntegerField(blank=True, db_column='General_Temporarilyoutside_oftheCPswithelectricity', null=True)),
                ('general_atmcashwithdrawalspossible', models.IntegerField(blank=True, db_column='General_ATMcashwithdrawalspossible', null=True)),
                ('general_defibrillator', models.IntegerField(blank=True, db_column='General_defibrillator', null=True)),
                ('createdby', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='CreatedBy', max_length=128, null=True)),
            ],
            options={
                'db_table': 'campingplaces',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Packagelist',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('packagename', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=200, null=True)),
                ('packagename_german', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=200, null=True)),
                ('extractingreadingthedata', models.IntegerField(blank=True, db_column='Extractingreadingthedata', null=True)),
                ('realtimemonitoring', models.IntegerField(blank=True, db_column='Realtimemonitoring', null=True)),
                ('livetracking', models.IntegerField(blank=True, db_column='Livetracking', null=True)),
                ('dealersearchinyourarea', models.IntegerField(blank=True, db_column='Dealersearchinyourarea', null=True)),
                ('alarmonpresssosbutton', models.IntegerField(blank=True, db_column='AlarmonPressSOSbutton', null=True)),
                ('alarmonoverspeed', models.IntegerField(blank=True, db_column='Alarmonoverspeed', null=True)),
                ('alarmatvibration', models.IntegerField(blank=True, db_column='Alarmatvibration', null=True)),
                ('alarmonleavinganarea_geofence', models.IntegerField(blank=True, db_column='Alarmonleavinganarea_geofence', null=True)),
                ('holidaymode_vehiclecannotbemonitoredonholidayifdesired', models.IntegerField(blank=True, db_column='Holidaymode_vehiclecannotbemonitoredonholidayifdesired', null=True)),
                ('alarmincluded_beforevehicleismoved_mustbeswitchedoff', models.IntegerField(blank=True, db_column='Alarmincluded_beforevehicleismoved_mustbeswitchedoff', null=True)),
                ('locationqueryperday', models.IntegerField(blank=True, db_column='Locationqueryperday', null=True)),
                ('archivehistoryofvehiclelocations', models.CharField(blank=True, db_column='Archivehistoryofvehiclelocations', max_length=100, null=True)),
                ('immediatereplacementserviceofthetracker', models.CharField(blank=True, db_column='Immediatereplacementserviceofthetracker', max_length=100, null=True)),
                ('vehiclefleetmanagement_numberofvehicles', models.IntegerField(blank=True, db_column='Vehiclefleetmanagement_numberofvehicles', null=True)),
                ('support_service_starttime', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Support_Service_StartTime', max_length=16, null=True)),
                ('support_service_endtime', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Support_Service_EndTime', max_length=16, null=True)),
                ('bringbackservice', models.CharField(blank=True, db_column='BringBackService', max_length=100, null=True)),
                ('activationfeeoncepervehicle', models.DecimalField(blank=True, db_column='Activationfeeoncepervehicle', decimal_places=2, max_digits=18, null=True)),
                ('annualpricepervehicle', models.DecimalField(blank=True, db_column='Annualpricepervehicle', decimal_places=2, max_digits=18, null=True)),
                ('mobilesimcardincl_dataroamingeumtl', models.DecimalField(blank=True, db_column='MobileSIMcardincl_DataroamingEUmtl', decimal_places=2, max_digits=18, null=True)),
                ('isallowpayment', models.IntegerField(blank=True, db_column='Isallowpayment', null=True)),
                ('pricemonthly', models.DecimalField(blank=True, db_column='PriceMonthly', decimal_places=2, max_digits=10, null=True)),
                ('pricequarter', models.DecimalField(blank=True, db_column='PriceQuarter', decimal_places=2, max_digits=10, null=True)),
                ('pricehalf', models.DecimalField(blank=True, db_column='PriceHalf', decimal_places=2, max_digits=10, null=True)),
                ('priceoneyear', models.DecimalField(blank=True, db_column='PriceOneYear', decimal_places=2, max_digits=10, null=True)),
                ('pricetwoyear', models.DecimalField(blank=True, db_column='PriceTwoYear', decimal_places=2, max_digits=10, null=True)),
                ('bringbackservicefrom', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='BringBackServiceFrom', max_length=16, null=True)),
                ('bringbackserviceup', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='BringBackServiceUp', max_length=16, null=True)),
                ('isactive', models.IntegerField(blank=True, db_column='Isactive', null=True)),
                ('onrequest_txt', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Onrequest_txt', max_length=250, null=True)),
                ('sortorder', models.IntegerField(blank=True, db_column='Sortorder', null=True)),
                ('eachadditionalvehicle', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('noofvehicleallow', models.IntegerField(blank=True, db_column='Noofvehicleallow', null=True)),
                ('annualpricepervehicle1', models.IntegerField(blank=True, db_column='Annualpricepervehicle1', null=True)),
                ('annualpricepervehicle2', models.IntegerField(blank=True, db_column='Annualpricepervehicle2', null=True)),
            ],
            options={
                'db_table': 'packagelist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usersubcriptionpackagedetail',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('subscriptionuserid', models.IntegerField(blank=True, db_column='SubscriptionuserId', null=True)),
                ('packagename', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=200, null=True)),
                ('packagename_german', models.CharField(blank=True, db_collation='utf8_general_ci', max_length=200, null=True)),
                ('extractingreadingthedata', models.IntegerField(blank=True, db_column='Extractingreadingthedata', null=True)),
                ('realtimemonitoring', models.IntegerField(blank=True, db_column='Realtimemonitoring', null=True)),
                ('livetracking', models.IntegerField(blank=True, db_column='Livetracking', null=True)),
                ('dealersearchinyourarea', models.IntegerField(blank=True, db_column='Dealersearchinyourarea', null=True)),
                ('alarmonpresssosbutton', models.IntegerField(blank=True, db_column='AlarmonPressSOSbutton', null=True)),
                ('alarmonoverspeed', models.IntegerField(blank=True, db_column='Alarmonoverspeed', null=True)),
                ('alarmatvibration', models.IntegerField(blank=True, db_column='Alarmatvibration', null=True)),
                ('alarmonleavinganarea_geofence', models.IntegerField(blank=True, db_column='Alarmonleavinganarea_geofence', null=True)),
                ('holidaymode_vehiclecannotbemonitoredonholidayifdesired', models.IntegerField(blank=True, db_column='Holidaymode_vehiclecannotbemonitoredonholidayifdesired', null=True)),
                ('falsealarmincluded_beforevehiclemoved_mustswitchedoff', models.IntegerField(blank=True, db_column='Falsealarmincluded_beforevehiclemoved_mustswitchedoff', null=True)),
                ('locationqueryperday', models.IntegerField(blank=True, db_column='Locationqueryperday', null=True)),
                ('archivehistoryofvehiclelocations', models.CharField(blank=True, db_column='Archivehistoryofvehiclelocations', max_length=100, null=True)),
                ('immediatereplacementserviceofthetracker', models.CharField(blank=True, db_column='Immediatereplacementserviceofthetracker', max_length=100, null=True)),
                ('vehiclefleetmanagement_numberofvehicles', models.IntegerField(blank=True, db_column='Vehiclefleetmanagement_numberofvehicles', null=True)),
                ('support_service_starttime', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Support_Service_StartTime', max_length=16, null=True)),
                ('support_service_endtime', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='Support_Service_EndTime', max_length=16, null=True)),
                ('bringbackservice', models.CharField(blank=True, db_column='BringBackService', max_length=100, null=True)),
                ('activationfeeoncepervehicle', models.DecimalField(blank=True, db_column='Activationfeeoncepervehicle', decimal_places=2, max_digits=18, null=True)),
                ('annualpricepervehicle', models.DecimalField(blank=True, db_column='Annualpricepervehicle', decimal_places=2, max_digits=18, null=True)),
                ('mobilesimcardincl_dataroamingeumtl', models.DecimalField(blank=True, db_column='MobileSIMcardincl_DataroamingEUmtl', decimal_places=2, max_digits=18, null=True)),
                ('isallowpayment', models.IntegerField(blank=True, db_column='Isallowpayment', null=True)),
                ('pricemonthly', models.DecimalField(blank=True, db_column='PriceMonthly', decimal_places=2, max_digits=10, null=True)),
                ('pricequarter', models.DecimalField(blank=True, db_column='PriceQuarter', decimal_places=2, max_digits=10, null=True)),
                ('pricehalf', models.DecimalField(blank=True, db_column='PriceHalf', decimal_places=2, max_digits=10, null=True)),
                ('priceoneyear', models.DecimalField(blank=True, db_column='PriceOneYear', decimal_places=2, max_digits=10, null=True)),
                ('pricetwoyear', models.DecimalField(blank=True, db_column='PriceTwoYear', decimal_places=2, max_digits=10, null=True)),
                ('bringbackservicefrom', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='BringBackServiceFrom', max_length=16, null=True)),
                ('bringbackserviceup', models.CharField(blank=True, db_collation='utf8_general_ci', db_column='BringBackServiceUp', max_length=16, null=True)),
                ('isactive', models.IntegerField(blank=True, db_column='Isactive', null=True)),
                ('noofvehicleallow', models.IntegerField(blank=True, db_column='Noofvehicleallow', null=True)),
            ],
            options={
                'db_table': 'usersubcriptionpackagedetail',
                'managed': False,
            },
        ),
    ]
